imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
#    - { resource: "@AppBundle/Resources/config/services.yml"}

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
framework:
    templating:
        engines: ['twig']
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    number_format:
        decimals: 2
        decimal_point: ','
        thousands_separator: '.'
    date:
        format: d/m/Y H:i
        interval_format: '%%d days'
    form_themes:
            - 'SonataCoreBundle:Form:datepicker.html.twig'
            - 'ApplicationSonataMediaBundle:Form:media_widgets.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                mappings:
                    SonataClassificationBundle: ~
                    SonataMediaBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    ApplicationSonataMediaBundle: ~
                    ApplicationSonataUserBundle: ~
                    ApplicationSonataClassificationBundle: ~
                auto_mapping: true
        

# Swiftmailer Configuration
swiftmailer:
    default_mailer: instant
    mailers:
        instant:
            disable_delivery:  %disable_delivery%
            transport: %mailer_transport%
            encryption: %mailer_encryption%
            auth_mode: %mailer_auth_mode%
            host:      %mailer_host%
            username:  %mailer_user%
            password:  %mailer_password%
            spool:     { type: memory }
    
    
sonata_block:
    default_contexts: [sonata_page_bundle]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:
        #...
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes

        # Some specific block from the SonataMediaBundle
        #sonata.media.block.media:
        #sonata.media.block.gallery:
        #sonata.media.block.feature_media:

        # Some block with different templates
        #acme.demo.block.demo:
        #    templates:
        #       - { name: 'Simple', template: 'AcmeDemoBundle:Block:demo_simple.html.twig' }
        #       - { name: 'Big',    template: 'AcmeDemoBundle:Block:demo_big.html.twig' }
        
        
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false
            
    providers:
        image:
            resizer: sonata.media.resizer.square
            
            
sonata_user:
    admin:
        user:
          class:      Application\Sonata\UserBundle\Admin\Model\UserAdmin
    class:            # Entity Classes
        user:               Application\Sonata\UserBundle\Entity\User
        group:              Application\Sonata\UserBundle\Entity\Group
    #admin:            # Admin Classes
        #user:
            #class:    Application\Sonata\UserBundle\Admin\Model\UserAdmin
        #group:
            #class:    Application\Sonata\UserBundle\Admin\Model\GroupAdmin


fos_user:
    from_email:
        address:        "%mailer_user%"
        sender_name:    "%projectName%"
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                                 # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

# API Rest Config
nelmio_cors:
    paths:
        '^/api/':
            allow_credentials: true
            allow_origin: ['*']
            allow_headers: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Authorization']
            allow_methods: ['POST','GET','DELETE','PUT']
            expose_headers: []
            max_age: 3600
        '^/':
            allow_credentials: true
            allow_origin: ['*']
            allow_headers: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Authorization']
            allow_methods: ['POST','GET','DELETE','PUT']
            expose_headers: []
            max_age: 3600
            hosts: ['^api\.']

# FOS REST Bundle
fos_rest:
    body_listener: true
    param_fetcher_listener: true
    routing_loader:
        default_format:  json
        include_format:  false
    format_listener:
        rules:
            - { path: ^/, priorities: [ json, jsonp, html, xml ], fallback_format: ~, prefer_extension: true }

stof_doctrine_extensions:
    orm:
        default:
            timestampable: true

nelmio_api_doc:
    models: { use_jms: true }
    documentation:
        info:
            title: Spark Documentation
            description: Documentation for Spark API
            version: 1.1.0
        securityDefinitions:
            Bearer:
                type: apiKey
                description: 'Value: Bearer {jwt}'
                name: Authorization
                in: header
            security:
                - Bearer: []
    areas:
        path_patterns: # an array of regexps
            - ^/api(?!/doc)


lexik_jwt_authentication:
    private_key_path: '%jwt_private_key_path%'
    public_key_path:  '%jwt_public_key_path%'
    pass_phrase:      '%jwt_key_pass_phrase%'
    token_ttl:        '%jwt_token_ttl%'

sonata_admin:
    security:
        handler: sonata.admin.security.handler.role
    show_mosaic_button: false
    search: false
    assets:
    title: '.'
    title_logo: "logo.png"
    templates:
        layout:     '::Admin/custom_layout.html.twig'
    dashboard:
        groups:
            sonata.admin.group.user:
                label:                sonata_user
                label_catalogue:      SonataUserBundle
                icon:                 '<i class="fa fa-users"></i>'
                items:
                    - sonata.user.admin.user
                    - sonata.user.admin.group
            sonata.admin.group.media:
                roles:                 [ROLE_SUPER_ADMIN]
                label:                sonata_media
                label_catalogue:      SonataMediaBundle
                icon:                 '<i class="fa fa-image"></i>'
                items:
                    - sonata.media.admin.media
                    - sonata.media.admin.gallery
            sonata.admin.group.classification:
                roles:                 [ROLE_SUPER_ADMIN]
                label:                Clasificaci√≥n
                icon:                 '<i class="fa fa-tags"></i>'
                items:
                    - sonata.classification.admin.category
                    - sonata.classification.admin.tag
                    - sonata.classification.admin.collection
                    - sonata.classification.admin.context
        blocks:
            -
                position: top
                type: sonata.block.service.text
                class: col-md-12
                settings:
                    content: >
                        <h1 style="margin: -20px 0 10px 0">%projectName%</h1><br/><br/>
           
            -
                position: bottom
                type: sonata.block.service.text
                class: col-md-12
                settings:
                    content: >
                        <div class="alert alert-info" style="margin:40px 0 0 0"><p><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>&nbsp;para ayuda o soporte: <a href="mailto:devel@gooapps.net?subject=support">Contacto</a></p></div>
            -
                position: left
                type: sonata.admin.block.admin_list
